
现更改位置：
1.tcp_socket.py中：
    1.1 由于select选择需要对文件描述符操作，故thread_data从io.BytesIO()改成os.pipe()，
        将对thread_data的读写分别对应读端和写端，即thread_data[0]和thread_data[1]
    1.2 按个人理解完成了tcp_main函数
    1.3 将TcpSocket简单封装为FullTCPSocket，使其绑定到"tun144"   (测试有问题)
2. event_loop.py中：
    2.1 由于select.EPOLLOUT的值为4，而在tcp_socket.py的_init_tcp函数在add_rule时选用了selectors.EVENT_WRITE，值为2，
        故将event_loop.py中READ_EVENT和WRITE_EVENT修改为selectors中的对应值
    2.2 在根据select.select获得readable, writeable后，应该在二者均空时，返回false，故改 or 为 and
    2.3 something_insterted的检验在获得readable, writeable后，仍应该进行，否则wait_next_event()会一直返回True，
        之后会在_tcp_loop中不断进入wait_next_event()而陷入死循环
